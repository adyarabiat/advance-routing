{"ast":null,"code":"var _jsxFileName = \"/Users/adyarabiat/Documents/React/react-maximilian-update/13.Building a Multi-Page SPA with React Router/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Ady\",\n  text: \"Learning React Native is fun!\"\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const param = useParams();\n  const quote = DUMMY_QUOTES.find(quote => {\n    console.log(quote);\n    return quote.id === param.quote;\n  });\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${param.quote}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(QuoteDetails, \"robhGa1ZC4zviMRLk6t/NW5RpXI=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/Users/adyarabiat/Documents/React/react-maximilian-update/13.Building a Multi-Page SPA with React Router/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["React","useParams","Route","Link","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetails","param","quote","find","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADkB,EAElB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFkB,CAArB;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGV,SAAS,EAAvB;AAEA,QAAMW,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAmBD,KAAD,IAAW;AACxCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOA,KAAK,CAACL,EAAN,KAAaI,KAAK,CAACC,KAA1B;AACF,GAHa,CAAd;;AAKA,MAAI,CAACA,KAAL,EAAY;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AAED,sBACG,QAAC,KAAD,CAAO,QAAP;AAAA,4BACG,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,KAAK,CAACC,KAAM,WAApC;AAAA,6BACG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AASF,CArBD;;GAAMF,Y;UACWT,S;;;KADXS,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst DUMMY_QUOTES = [\n   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n   { id: \"q2\", author: \"Ady\", text: \"Learning React Native is fun!\" },\n];\nconst QuoteDetails = () => {\n   const param = useParams();\n\n   const quote = DUMMY_QUOTES.find((quote) => {\n      console.log(quote);\n      return quote.id === param.quote;\n   });\n\n   if (!quote) {\n      return <p> No Quote found</p>;\n   }\n\n   return (\n      <React.Fragment>\n         <HighlightedQuote text={quote.text} author={quote.author} />\n         <Link></Link>\n         <Route path={`/quotes/${param.quote}/comments`}>\n            <Comments />\n         </Route>\n      </React.Fragment>\n   );\n};\n\nexport default QuoteDetails;\n"]},"metadata":{},"sourceType":"module"}