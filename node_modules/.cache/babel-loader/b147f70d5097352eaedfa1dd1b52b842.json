{"ast":null,"code":"var _jsxFileName = \"/Users/adyarabiat/Documents/React/react-maximilian-update/13.Building a Multi-Page SPA with React Router/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\"; // import Card from \"../ui/Card\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  const onFocusHanlndler = () => {\n    setIsEntering(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: onFocusHanlndler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(QuoteForm, \"Zf9B+4RgRq31ADCOsmURGegSJ84=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["/Users/adyarabiat/Documents/React/react-maximilian-update/13.Building a Multi-Page SPA with React Router/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["React","useRef","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEntering","setIsEntering","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","onFocusHanlndler","form","isLoading","loading","control","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,kBAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMS,cAAc,GAAGV,MAAM,EAA7B;AACA,QAAMW,YAAY,GAAGX,MAAM,EAA3B;;AAEA,WAASY,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAJ+B,CAM/B;;AAEAV,IAAAA,KAAK,CAACY,UAAN,CAAiB;AAAEC,MAAAA,MAAM,EAAEL,aAAV;AAAyBM,MAAAA,IAAI,EAAEH;AAA/B,KAAjB;AACF;;AACD,QAAMI,gBAAgB,GAAG,MAAM;AAC5Bb,IAAAA,aAAa,CAAC,IAAD,CAAb;AACF,GAFD;;AAIA,sBACG,QAAC,KAAD,CAAO,QAAP;AAAA,2BACG,QAAC,IAAD;AAAA,6BACG;AACG,QAAA,OAAO,EAAEa,gBADZ;AAEG,QAAA,SAAS,EAAEjB,OAAO,CAACkB,IAFtB;AAGG,QAAA,QAAQ,EAAEX,iBAHb;AAAA,mBAKIL,KAAK,CAACiB,SAAN,iBACE;AAAK,UAAA,SAAS,EAAEnB,OAAO,CAACoB,OAAxB;AAAA,iCACG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBANN,eAWG;AAAK,UAAA,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;AAAA,kCACG;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,QAAtB;AAA+B,YAAA,GAAG,EAAEhB;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXH,eAeG;AAAK,UAAA,SAAS,EAAEL,OAAO,CAACqB,OAAxB;AAAA,kCACG;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAU,YAAA,EAAE,EAAC,MAAb;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,GAAG,EAAEf;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfH,eAmBG;AAAK,UAAA,SAAS,EAAEN,OAAO,CAACsB,OAAxB;AAAA,iCACG;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AA6BF,CAhDD;;GAAMrB,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n// import Card from \"../ui/Card\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n   const [isEntering, setIsEntering] = useState(false);\n   const authorInputRef = useRef();\n   const textInputRef = useRef();\n\n   function submitFormHandler(event) {\n      event.preventDefault();\n\n      const enteredAuthor = authorInputRef.current.value;\n      const enteredText = textInputRef.current.value;\n\n      // optional: Could validate here\n\n      props.onAddQuote({ author: enteredAuthor, text: enteredText });\n   }\n   const onFocusHanlndler = () => {\n      setIsEntering(true);\n   };\n\n   return (\n      <React.Fragment>\n         <Card>\n            <form\n               onFocus={onFocusHanlndler}\n               className={classes.form}\n               onSubmit={submitFormHandler}\n            >\n               {props.isLoading && (\n                  <div className={classes.loading}>\n                     <LoadingSpinner />\n                  </div>\n               )}\n\n               <div className={classes.control}>\n                  <label htmlFor=\"author\">Author</label>\n                  <input type=\"text\" id=\"author\" ref={authorInputRef} />\n               </div>\n               <div className={classes.control}>\n                  <label htmlFor=\"text\">Text</label>\n                  <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n               </div>\n               <div className={classes.actions}>\n                  <button className=\"btn\">Add Quote</button>\n               </div>\n            </form>\n         </Card>\n      </React.Fragment>\n   );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}